-- =====================================================================
-- KEEPWELL (RAW) -> BET_FILES (DIST) USING FILE LAYOUT (STAGE)
-- Safe: does not touch existing BET_STAGE.BET_KeepWell table
-- Creates: BET_STAGE.BET_KeepWell_Temp2 (staging output for this flow)
-- =====================================================================

DECLARE Sys_Of_Rec_Cd STRING DEFAULT 'Bet_KeepWell.csv';
DECLARE Src_Sys_Cd    STRING DEFAULT 'BET';
DECLARE Prcs_Id       STRING DEFAULT 'airflow';
DECLARE NowTms        TIMESTAMP DEFAULT CURRENT_TIMESTAMP();

DECLARE columnList STRING;
DECLARE castList   STRING;

-- 1) Exclusion list: non-business/system columns to NOT include in RECORDDATA
CREATE OR REPLACE TEMP TABLE EXCLUDE_COLS AS
SELECT col
FROM UNNEST([
  'Crt_Rec_Abac_Id',
  'Audit_Row_Id',
  'Bus_Dt',
  'Src_Sys_Cd',
  'Concat_Record',
  'Crt_Rec_Sys_Tms',
  'Crt_Rec_Prcs_Nme',
  'Crt_Rec_Usr_Nme'
]) AS col;

-- 2) Pull file layout (stage) and clean mapping names
CREATE OR REPLACE TEMP TABLE Layout AS
SELECT
  LOWER(
    REPLACE(
      REPLACE(
        REGEXP_REPLACE(Mapping_Field_Name, r'[^A-Za-z0-9_%\s]+', ''),
        '$', 'Amt'
      ),
      '%', 'Perc'
    )
  ) AS Mapping_Field_Name,
  Field,                                -- e.g., "Field11"
  UPPER(TRIM(CAST(Data_Type AS STRING))) AS Data_Type
FROM `dev-edap.BET_STAGE.BET_KeepWell_FileLayout_New`
WHERE Field IS NOT NULL
  AND Field NOT IN (SELECT col FROM EXCLUDE_COLS);

-- 3) Deduplicate layout on Mapping_Field_Name (keep 1 per mapping)
CREATE OR REPLACE TEMP TABLE Layout_Dedup AS
SELECT Mapping_Field_Name, Data_Type, Field
FROM (
  SELECT *,
         ROW_NUMBER() OVER (PARTITION BY Mapping_Field_Name ORDER BY Field) AS rn
  FROM Layout
)
WHERE rn = 1;

-- 4) Build a normalized view of RAW columns (to tolerate underscores/case)
CREATE OR REPLACE TEMP TABLE RawCols AS
SELECT
  ordinal_position,
  column_name,
  LOWER(REGEXP_REPLACE(column_name, r'[^a-z0-9]', '')) AS norm_name
FROM `dev-edap.BET_RAW.INFORMATION_SCHEMA.COLUMNS`
WHERE table_name = 'BET_KeepWell';

-- 5) Normalize layout mapping names as well
CREATE OR REPLACE TEMP TABLE LayoutNorm AS
SELECT
  l.*,
  LOWER(REGEXP_REPLACE(l.Mapping_Field_Name, r'[^a-z0-9]', '')) AS norm_name,
  SAFE_CAST(REGEXP_EXTRACT(l.Field, r'(\d+)') AS INT64)          AS field_num
FROM Layout_Dedup l;

-- 6) Map layout Field -> actual RAW column, first by ordinal position;
--    if that fails, fallback by normalized name match
CREATE OR REPLACE TEMP TABLE Field_Map AS
WITH by_pos AS (
  SELECT
    ln.Field,
    rc.column_name AS actual_column
  FROM LayoutNorm ln
  JOIN RawCols rc
    ON rc.ordinal_position = ln.field_num
),
by_name AS (
  SELECT
    ln.Field,
    rc.column_name AS actual_column
  FROM LayoutNorm ln
  JOIN RawCols rc
    ON rc.norm_name = ln.norm_name
)
SELECT Field, actual_column
FROM (
  SELECT Field, actual_column,
         ROW_NUMBER() OVER (PARTITION BY Field ORDER BY actual_column) AS pick
  FROM (
    SELECT * FROM by_pos
    UNION ALL
    SELECT * FROM by_name
  )
)
WHERE pick = 1;

-- 7) Only keep mappings that resolved to a real RAW column
CREATE OR REPLACE TEMP TABLE Field_Map_Resolved AS
SELECT fm.Field, fm.actual_column
FROM Field_Map fm
JOIN RawCols rc
  ON rc.column_name = fm.actual_column;

-- 8) Build dynamic column and cast lists (backticks are CRITICAL)
SET columnList = (
  SELECT STRING_AGG(CONCAT('`', TRIM(actual_column), '`'), ', ')
  FROM Field_Map_Resolved
);

SET castList = (
  SELECT STRING_AGG(CONCAT('CAST(`', TRIM(actual_column), '` AS STRING)'), ', ')
  FROM Field_Map_Resolved
);

-- -- If you want to see what will be used:
-- SELECT columnList, castList;

-- 9) Create staging output for this flow (doesn't touch existing stage tables)
EXECUTE IMMEDIATE FORMAT("""
CREATE OR REPLACE TABLE `dev-edap.BET_STAGE.BET_KeepWell_Temp2` AS
WITH source_cast AS (
  SELECT
    %s,
    Crt_Rec_Abac_Id,
    Audit_Row_Id,
    Bus_Dt
  FROM `dev-edap.BET_RAW.BET_KeepWell`
),
u AS (
  SELECT
    Column_Name,
    Column_Value,
    Crt_Rec_Abac_Id,
    Audit_Row_Id,
    Bus_Dt
  FROM source_cast
  UNPIVOT (Column_Value FOR Column_Name IN (%s))
)
SELECT
  l.Mapping_Field_Name AS Column_Name,      -- business name
  u.Column_Value       AS Column_Value,
  l.Data_Type          AS Data_Type,
  '%s'                 AS Sys_Of_Rec_Cd,
  '%s'                 AS Src_Sys_Cd,
  TIMESTAMP('%s')      AS Crt_Rec_Sys_Tms,
  'I'                  AS Row_Actn_Cd,
  'N'                  AS Row_Reprcs_Flg,
  'N'                  AS Row_Rej_Flg,
  '%s'                 AS Prcs_Id,
  u.Audit_Row_Id       AS Audit_Row_Id,
  u.Bus_Dt             AS Bus_Dt
FROM u
JOIN Layout_Dedup l
  ON u.Column_Name = l.Field;
""",
castList, columnList, Sys_Of_Rec_Cd, Src_Sys_Cd, CAST(NowTms AS STRING), Prcs_Id);

-- 10) Load into BET_DIST.BET_Files
--     (if you only want to replace for this source, filter on Sys_Of_Rec_Cd)
DELETE FROM `dev-edap.BET_DIST.BET_Files`
WHERE Sys_Of_Rec_Cd = 'Bet_KeepWell.csv';

INSERT INTO `dev-edap.BET_DIST.BET_Files`
SELECT
  ARRAY_AGG(STRUCT(
    Column_Name,
    Column_Value,
    Data_Type
  )) AS RECORDDATA,
  'Bet_KeepWell.csv'  AS Sys_Of_Rec_Cd,
  'BET'               AS Src_Sys_Cd,
  Audit_Row_Id        AS Audit_Row_Id,
  'airflow'           AS Prcs_Id,
  CURRENT_TIMESTAMP() AS Crt_Rec_Sys_Tms,
  CURRENT_TIMESTAMP() AS Upd_Rec_Sys_Tms,
  'wf_bet_dst_bet_keepwell_daily_xfm_bq' AS Crt_Rec_Prcs_Nme,
  'wf_bet_dst_bet_keepwell_daily_xfm_bq' AS Upd_Rec_Prcs_Nme,
  SESSION_USER()      AS Crt_Rec_Usr_Nme,
  SESSION_USER()      AS Upd_Rec_Usr_Nme,
  Bus_Dt              AS Bus_Dt
FROM `dev-edap.BET_STAGE.BET_KeepWell_Temp2`
GROUP BY Audit_Row_Id, Bus_Dt;
